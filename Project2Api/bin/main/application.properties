spring.application.name=Project2Api

server.port=7070
# utf-8 encoding
server.servlet.encoding.force=true

# h2 database web으로 확인 - h2 db 의 console 을 사용하겠다
# http://localhost:9090/h2-console
# spring.h2.console.enabled=true

# oracle 사용설정
spring.jpa.database=oracle
# spring.jpa.database-platform=org.hibernate.dialect.OracleDialect

# src/main/resources/data.sql 를 불러와서 초기data로 사용
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always

# JPA 로깅 설정
# 디버그 레벨로 쿼리 출력
logging.level.org.hibernate.SQL=DEBUG
# 매개변수 값 보여 주기(? 값의 type 을 다음줄에 출력)
logging.level.org.hibernate.orm.jdbc.bind=trace
# 쿼리 줄바꿈하기
spring.jpa.properties.hibernate.format_sql=true

# H2 DB 고정 URL 설정
# 유니크 URL 생성하지 않기
# spring.datasource.generate-unique-name=false
# in-memory 고정 URL 설정하기
#spring.datasource.url=jdbc:h2:mem:testdb

###---------------------------------------------------------
# embeded mode c:\dev\projec01\data\testdb.mv.db 생성됨
#spring.datasource.url=jdbc:h2:./data/testdb
#spring.h2.console.path=/h2-console
#spring.datasource.url=jdbc:h2:~/testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=
#spring.datasource.password=

# oracle datasource 설정
spring.datasource.driverClassName=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=spring
spring.datasource.password=1234

# 엔티티를 기준으로 테이블을 생성하는 규칙을 정의
# create - 테이블 새로만들어진다
# update - 테이블 없으면 만들고 있으면 그냥 사용한다
# none   - 존재하는 db에 대해 아무것도 하지 않음
#spring.jpa.hibernate.ddl-auto=update 
spring.jpa.hibernate.ddl-auto=create 
#spring.jpa.hibernate.ddl-auto=none 

# 데이터베이스 엔진 종류 설정(추가하면 에러남)
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect 